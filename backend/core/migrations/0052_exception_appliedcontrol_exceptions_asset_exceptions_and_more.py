# Generated by Django 5.1.5 on 2025-02-07 18:22

import django.db.models.deletion
import iam.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0051_rename_project_perimeter_alter_perimeter_options_and_more"),
        ("iam", "0010_user_preferences"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Exception",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "ref_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Reference ID",
                    ),
                ),
                (
                    "severity",
                    models.SmallIntegerField(
                        choices=[
                            (-1, "undefined"),
                            (0, "low"),
                            (1, "medium"),
                            (2, "high"),
                            (3, "critical"),
                        ],
                        default=-1,
                        verbose_name="Severity",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("undefined", "undefined"),
                            ("active", "active"),
                            ("mitigated", "mitigated"),
                            ("resolved", "resolved"),
                            ("deprecated", "deprecated"),
                        ],
                        default="undefined",
                        verbose_name="Status",
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        help_text="Specify when the exception will no longer apply",
                        null=True,
                        verbose_name="Expiration date",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "owners",
                    models.ManyToManyField(
                        blank=True,
                        related_name="exceptions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="appliedcontrol",
            name="exceptions",
            field=models.ManyToManyField(
                blank=True,
                related_name="applied_controls",
                to="core.exception",
                verbose_name="Exceptions",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="exceptions",
            field=models.ManyToManyField(
                blank=True,
                related_name="assets",
                to="core.exception",
                verbose_name="Exceptions",
            ),
        ),
        migrations.AddField(
            model_name="requirementassessment",
            name="exceptions",
            field=models.ManyToManyField(
                blank=True,
                related_name="requirement_assessments",
                to="core.exception",
                verbose_name="Exceptions",
            ),
        ),
        migrations.AddField(
            model_name="riskscenario",
            name="exceptions",
            field=models.ManyToManyField(
                blank=True,
                related_name="risk_scenarios",
                to="core.exception",
                verbose_name="Exceptions",
            ),
        ),
        migrations.AddField(
            model_name="vulnerability",
            name="exceptions",
            field=models.ManyToManyField(
                blank=True,
                related_name="vulnerabilities",
                to="core.exception",
                verbose_name="Exceptions",
            ),
        ),
    ]
